{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","toggleMode2","toggleMode3","TextForm","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","defaultProps","aboutText","App","setMode","_useState3","_useState4","setAlert","message","setTimeout","name","body","background","colorb","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.a142fc27.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport \"./Styles.css\";\r\n// import { Link } from 'react-router-dom/cjs/react-router-dom.min';\r\n\r\nexport default function Navbar \r\n(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link> */}\r\n              </li>\r\n              </ul>\r\n              <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} mx-2 my-2`}>\r\n              \r\n                  <input type=\"button\" className=\"bt1 mx-2 \" onClick={props.toggleMode}></input>\r\n                  <input type=\"button\" className=\"bt2 mx-2 \" onClick={props.toggleMode2}></input>\r\n                  <input type=\"button\" className=\"bt3 mx-2 \" onClick={props.toggleMode3}></input>\r\n                 \r\n              </div>\r\n\r\n              \r\n\r\n              {/* <form className=\"d-flex\" role=\"search\">\r\n                      <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n                      <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n                  </form> */}\r\n\r\n          </div>\r\n      </div>\r\n</nav>\r\n)\r\n}\r\n\r\n\r\nNavbar.propTypes = {\r\ntitle: PropTypes.string.isRequired,\r\naboutText: PropTypes.string.isRequired\r\n}\r\n\r\nNavbar.defaultProps = {\r\ntitle: 'Set title here',\r\naboutText: 'About'\r\n}","import React, { useState } from 'react'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text );\r\n    let newText = text.toUpperCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to uppercase\", \"success\")\r\n  }\r\n\r\n  const handleLoClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text );\r\n    let newText = text.toLowerCase();\r\n    setText(newText)\r\n    props.showAlert(\"Converted to lowercase\", \"success\")\r\n  }\r\n\r\n  const handleOnChange = (event) => {\r\n    // console.log(\"On Change\");\r\n    setText(event.target.value)\r\n  }\r\n\r\n  const handleClClick = () => {\r\n    // console.log(\"Uppercase was clicked\" + text );\r\n    let newText = \"\";\r\n    setText(newText)\r\n    props.showAlert(\"Text Cleared\", \"success\")\r\n  }\r\n\r\n  const handleCopy =() => {\r\n    var text = document.getElementById(\"myBox\")\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n    props.showAlert(\"Text Copied\", \"success\")\r\n  } \r\n\r\n  const handleExtraSpaces = () =>\r\n  {\r\n    let newText = text.split(/[ ]+/)\r\n    setText(newText.join(\" \"))\r\n    props.showAlert(\"Extra Spaces Removed\", \"success\")\r\n  }\r\n\r\n  const [text, setText] = useState('');\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode==='light'?'black':'white'}}>\r\n      <h1>{props.heading}</h1>\r\n      <div className=\"mb-3\">\r\n        <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'grey':'white', color: props.mode==='light'?'black':'white' }} id=\"myBox\" rows=\"8\"></textarea>\r\n      </div>\r\n      <button className=\"btn btn-primary mx-2 my-2\" value=\"black\" onClick={handleUpClick} >Convert to Uppercase</button>\r\n\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleLoClick} >Convert to Lowercase</button>\r\n\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleClClick} >Clear Text</button>\r\n\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleCopy} >Copy Text</button>\r\n\r\n      <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces} >Remove Extra Spaces</button>\r\n\r\n    </div>\r\n    <div className=\"container my-3\" style={{color: props.mode==='light'?'black':'white'}} >\r\n        <h2>Your text summary</h2>\r\n        <p>{text.split(\" \").length} words and {text.length} characters</p>\r\n        <p>{0.008 * text.split(\" \").length} Minutes read</p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\"Enter something in the textbox above to preview it here\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n  return (\r\n    \r\nprops.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n    {capitalize(props.alert.type)} : {props.alert.msg}\r\n    </div>\r\n\r\n    \r\n  )\r\n}\r\n","import { useState } from 'react';\nimport './App.css';\nimport React from 'react'\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n\n  const [alert, setAlert] = useState(null);\n\n const showAlert = (message, type) => {\n      setAlert({\n        msg: message,\n        type: type\n      })\n\n      setTimeout(() => {\n        setAlert(null);\n      }, 2000);\n }\n\n  const toggleMode = (name) => {\n if (mode === 'light'){\n   setMode('dark');\n   document.body.style.background = \"#383838\"\n   name.colorb=\"black\"\n   showAlert(\"Dark mode has been enabled\", \"success\")\n   document.title='TextUtils - Dark Mode';\n }\n else{\n   setMode('light');\n   document.body.style.background = \"white\"\n   showAlert(\"Light mode has been enabled\", \"success\")\n   document.title='TextUtils - Light Mode';\n }}\n\n const toggleMode2 = (name) => {\n  if (mode === 'light'){\n    setMode('dark');\n    document.body.style.background = \"#827397\"\n    showAlert(\"Dark mode has been enabled\", \"success\")\n  }\n  else{\n    setMode('light');\n    document.body.style.background = \"white\"\n    showAlert(\"Light mode has been enabled\", \"success\")\n  }}\n\n  const toggleMode3 = (name) => {\n    if (mode === 'light'){\n      setMode('dark');\n      document.body.style.background = \"#064663\"\n      showAlert(\"Dark mode has been enabled\", \"success\")\n    }\n    else{\n      setMode('light');\n      document.body.style.background = \"white\"\n      showAlert(\"Light mode has been enabled\", \"success\")\n    }}\n  return (\n    <>\n    {/* <Router> */}\n<Navbar title=\"TextUtils\" aboutText=\"About\" mode={mode} toggleMode={toggleMode} toggleMode2={toggleMode2} toggleMode3={toggleMode3} />\n<Alert alert={alert}/>\n<div className=\"container\">\n{/* <Switch> */}\n      {/* <Route exact path=\"/about\">\n            <About />\n        </Route> */}\n          {/* <Route exact path=\"/\" element> always use exact */}\n          <TextForm  showAlert={showAlert} heading=\"Enter the Text\" mode={mode}/> \n          {/* </Route> */}\n          {/* <About/> */}\n{/* </Switch> */}\n</div>\n{/* </Router> */}\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}